Number: 353  Date: 2020-08-26 

### Official
### Tooling
* [Contributing to the IntelliJ Rust plugin](https://kobzol.github.io/rust/intellij/2020/07/31/contributing-0-setup.html)
* [IntelliJ Rust Changelog #129](https://intellij-rust.github.io/2020/08/24/changelog-129.html)
* [Rust Analyzer Changelog #39](https://rust-analyzer.github.io/thisweek/2020/08/24/changelog-39.html)
### Newsletters
* [This Week in Veloren 81](https://veloren.net/devblog-81/)
* [The Embedded Working Group Newsletter - 25](https://rust-embedded.github.io/blog/newsletter-25/)
### Observations/Thoughts
* [A Story of Rusty Containers, Queues, and the Role of Assumed Identity](https://dev.to/pnehrer/a-story-of-rusty-containers-queues-and-the-role-of-assumed-identity-kl2)
* [As above, so below: Bare metal Rust generics](https://www.ecorax.net/as-above-so-below-1/)
* [First thoughts on Rust vs OCaml](https://blog.darklang.com/first-thoughts-on-rust-vs-ocaml/)
* [The problem of safe FFI bindings in Rust](https://www.abubalay.com/blog/2020/08/22/safe-bindings-in-rust)
* [That's so Rusty!](https://dev.to/imaculate3/that-s-so-rusty-3akm)
* [Profiling Doesn't Always Have To Be Fancy](https://www.justanotherdot.com/posts/profiling-doesnt-always-have-to-be-fancy.html)
* [Why I like Piston, A Rust game engine](https://kai.coding.blog/why-i-like-piston)
* [The CXX Debate](https://steveklabnik.com/writing/the-cxx-debate)
* [video] [Bending the curve: A personal tutor at your fingertips](https://youtu.be/Z6X7Ada0ugE)
### Learn Standard Rust
* [Why can't I early return in an if statement in Rust?](https://www.christopherbiscardi.com/why-can-t-i-early-return-in-an-if-statement-in-rust)
* [Bleed Less during Runtime with Rust's Lifetime](https://blog.knoldus.com/bleed-less-during-runtime-with-rusts-lifetime/)
* [A Javascript Developer's Cheatsheet for Rust](https://tndl.me/blog/2020/rust-javascript-cheatsheet/)
* [video] [RustConf 2020 - Macros for a More Productive Rust](https://youtu.be/dZiWkbnaQe8)
* [video] [RustConf 2020 - Rust for Non-Systems Programmers](https://youtu.be/BBvcK_nXUEg)
### Learn More Rust
* [Different levels of Async in Rust](https://www.fpcomplete.com/blog/different-levels-async-rust/)
* [How to run Rust on Arduino Uno](https://dev.to/creativcoder/how-to-run-rust-on-arduino-uno-40c0)
* [Let's build a single binary gRPC server-client with Rust in 2020 - Part 1](https://dev.to/tjtelan/let-s-build-a-single-binary-grpc-server-client-with-rust-in-2020-part-1-3cnk)
* [Writing a Test Case Generator for a Programming Language](https://fitzgeraldnick.com/2020/08/24/writing-a-test-case-generator.html)
* [Day 12: Write web app with actix-web - 100DaysOfRust](https://dev.to/0xbf/day11-write-web-app-with-actix-web-100dayofrust-1lkn)
* [Kernel printing with Rust](https://not-matthias.github.io/kernel-printing-with-rust/)
* [Running Animation in Amethyst](https://mtigley.dev/posts/running-animation/)
* [PL] [CrabbyBird #0 Pierwsza przygoda z Rustem i Godotem](https://postacnormalna.pl/pierwsza-przygoda-z-rustem-i-godotem/)
* [video] [Build a Smart Bookmarking Tool with Rust and Rocket Video Series](https://www.youtube.com/playlist?list=PLzIwronG0sE56c6hDYOKW3-rPxmIyttoe)
* [video] [RustConf 2020 - Error Handling Isn't All About Errors](https://youtu.be/rAF8mLI0naQ)
* [video] [RustConf 2020 - Under a Microscope: Exploring Fast and Safe Rust for Biology](https://youtu.be/2b8InauuRqw)
* [video] [RustConf 2020 - My First Rust Project: Starting a 2D game with Amethyst](https://youtu.be/GFi_EdS_s_c)
* [video] [RustConf 2020 - Controlling Telescope Hardware with Rust](https://youtu.be/xlVnp7VOxRE)
### Project Updates
* [Rustsim becomes Dimforge](https://www.dimforge.com/blog/2020/08/18/rustsim-becomes-dimforge/)
* [Announcing the Rapier physics enginge](https://www.dimforge.com/blog/2020/08/25/announcing-the-rapier-physics-engine/)
* [defmt, a highly efficient Rust logging framework for embedded devices](https://ferrous-systems.com/blog/defmt/)
* [Scaling Bevy](https://bevyengine.org/news/scaling-bevy/)
* [One year of Nushell](http://www.nushell.sh/blog/2020/08/23/year_of_nushell.html)
### Miscellaneous
* [Rust-style futures in C](https://axelforsman.tk/2020/08/24/rust-style-futures-in-c.html)
* [Porting a Golang and Rust CLI tool to D](https://blog.pingfrommorocco.com/2020/08/porting-golang-and-rust-cli-tool-to-d.html)
* [How to Read First Impression Posts](https://www.possiblerust.com/community/how-to-read-first-impression-posts)
* [audio] [The Virtual World - Embedded Rust & Ferrous Systems - James Munns](https://anchor.fm/the-virtual-world/episodes/Embedded-Rust--Ferrous-Systems---James-Munns-eidv76)
* [audio] [Rust GameDev Podcast - Interview with Herbert Wolverson (Bracket-Lib)](https://rustgamedev.com/episodes/interview-with-herbert-wolverson-bracket-lib)
* [video] [Before Main: How Executables Work on Linux](https://youtu.be/jR2hUhjcAXI)
* [video] [RustConf 2020 - Opening Keynote](https://youtu.be/IwPRu5FhfIQ)
* [video] [RustConf 2020 - How to Start a Solo Project that You'll Stick With](https://youtu.be/yv6L_xmjw5I)
* [video] [RustConf 2020 - Closing Keynote](https://youtu.be/RNsEsZbXE-4)

Number: 354  Date: 2020-09-04 

### Official
* [Announcing Rust 1.46.0](https://blog.rust-lang.org/2020/08/27/Rust-1.46.0.html)
### Tooling
* [Rust Analyzer Changelog #40](https://rust-analyzer.github.io/thisweek/2020/08/31/changelog-40.html)
* [Contributing to the IntelliJ Rust plugin: Writing an intention](https://kobzol.github.io/rust/intellij/2020/08/25/contributing-2-subst-assoc-type-int.html)
### Newsletters
* [Rust in Blockchain Newsletter #15 - Turbofish in the Blocksea](https://rustinblockchain.org/newsletters/2020-09-02-turbofish-in-the-blocksea/)
### Observations/Thoughts
* [Should we trust Rust with the future of systems programming?](https://edfloreshz.blog/should-we-trust-rust-with-the-future-of-systems-programming)
* [Optionality in the type systems of Julia and Rust](https://andreaskroepelin.de/blog/sum_types/)
* [Migrating from quick-error to SNAFU: a story on revamped error handling in Rust](https://dev.to/e_net4/migrating-from-quick-error-to-snafu-a-story-on-revamped-error-handling-in-rust-58h9)
* [Go use those Traits](https://prateeknischal.github.io/go-use-those-traits/)
* [Starframe devlog: Architecture](https://moletrooper.github.io/blog/2020/08/starframe-1-architecture/)
* [Event Chaining as a Decoupling Method in Entity-Component-System](https://www.jojolepro.com/blog/2020-08-20_event_chaining/)
* [Rust serialization: What's ready for production today?](https://blog.logrocket.com/rust-serialization-whats-ready-for-production-today/)
* [rust vs scripted languages; a short case study](https://www.linkedin.com/pulse/rust-goodness-case-study-matthew-sherborne)
* [DE] [Entwicklung: Warum Rust die Antwort auf miese Software und Programmierfehler ist](https://www.heise.de/hintergrund/Entwicklung-Warum-Rust-die-Antwort-auf-miese-Software-und-Programmierfehler-ist-4879795.html)
* [video] [Is Rust Used Safely by Software Developers?](https://youtu.be/iOBXVOAbpdY)
### Learn Standard Rust
* [Ownership in Rust, Part 1](https://www.thomascountz.com/2018/07/09/ownership-in-rust-part-1)
* [Ownership in Rust, Part 2](https://www.thomascountz.com/2018/07/11/ownership-in-rust-part-2)
* [Learning Rust 1: Install things and read a file](https://dev.to/jbachhardie/learning-rust-1-install-things-and-read-a-file-5613)
* [Learning Rust 2: A Tiny Database is Born](https://dev.to/jbachhardie/learning-rust-2-a-tiny-database-is-born-eef)
* [That's so Rusty: Ownership](https://dev.to/imaculate3/that-s-so-rusty-ownership-493c)
### Learn More Rust
* [As above, so below: Bare metal Rust generics 2/2](https://www.ecorax.net/as-above-so-below-2/)
* [Halite III Bot Development Kit in Rust](https://sgolem.com/halite-iii-bot-development-kit-in-rust)
* [Zero To Production #3.5: HTML forms, Databases, Integration tests](https://www.lpalmieri.com/posts/2020-08-31-zero-to-production-3-5-html-forms-databases-integration-tests/)
* [Objective-Rust](https://belkadan.com/blog/2020/08/Objective-Rust/)
* [Building web apps with Rust using the Rocket framework](https://blog.logrocket.com/rust-web-apps-using-rocket-framework/)
* [Writing an asynchronous MQTT Broker in Rust - Part 3](https://hassamuddin.com/blog/rust-mqtt/channels/)
* [Multiple Thread Pools in Rust](https://pkolaczk.github.io/multiple-threadpools-rust/)
* [Type-directed metaprogramming in Rust](https://willcrichton.net/notes/type-directed-metaprogramming-in-rust/)
* [Generating static arrays during compile time in Rust](https://dev.to/rustyoctopus/generating-static-arrays-during-compile-time-in-rust-10d8)
* [Let's build a single binary gRPC server-client with Rust in 2020 - Part 2](https://dev.to/tjtelan/let-s-build-a-single-binary-grpc-server-client-with-rust-in-2020-part-2-1i2e)
* [How to use Rust + WebAssembly to Perform Serverless Machine Learning and Data Visualization in the Cloud](https://www.freecodecamp.org/news/rust-webassembly-serverless-tencent-cloud/)
* [Fireworks for your terminal](https://blog.darrien.dev/posts/fireworks-for-your-terminal/)
* [Serverless Data Ingestion with Rust and AWS SES](http://jamesmcm.github.io/blog/2020/08/29/rust-ses/#en)
* [Box Plots at the Olympics](https://datacrayon.com/posts/programming/rust-notebooks/box-plots-at-the-olympics/)
* [Fixing include_bytes!](https://jack.wrenn.fyi/blog/include-transmute/)
* [Generating static arrays during compile time in Rust](https://dev.to/rustyoctopus/generating-static-arrays-during-compile-time-in-rust-10d8)
* [PL] [CrabbyBird #1 O tym, jak animować postać gracza](https://postacnormalna.pl/animacja-kraboptaka/)
* [video] [FLTK Rust: Creating a music player with customized widgets](https://youtu.be/okdFx6tv7ds)
### Project Updates
* [This August in my database project written in Rust](https://alex-dukhno.github.io/2020-08-29-This-August-in-my-Database-project-written-in-rust-copy/)
* [Using Rust for Kentik's New Synthetic Monitoring Agent](https://www.kentik.com/blog/using-rust-for-kentiks-new-synthetic-network-monitoring-agent/)
* [AWS introduces Bottlerocket: A Rust language-oriented Linux for containers](https://www.zdnet.com/article/aws-introduces-bottlerocket-a-rust-language-oriented-linux-for-containers/)
* [Using `cargo test` for embedded testing with `panic-probe`](https://ferrous-systems.com/blog/cargo-test-with-panic-probe/)
* [Headcrab: August 2020 progress report](https://headcrab.rs/2020/08/31/august-update.html)
* [Rust Analyzer 2020[..6] Financial Report](https://rust-analyzer.github.io/blog/2020/08/20/financial-report.html)
### Miscellaneous
* [Avoid Build Cache Bloat By Sweeping Away Artifacts](https://www.justanotherdot.com/posts/avoid-build-cache-bloat-by-sweeping-away-artifacts.html)
* [const_fn makes it too easy to do mandelbrots](https://www.reddit.com/r/rust/comments/ijpxz2/const_fn_makes_it_too_easy_to_do_mandelbrots/)
* [Linux Developers Continue Evaluating The Path To Adding Rust Code To The Kernel](https://www.phoronix.com/scan.php?page=news_item&px=Linux-Kernel-Rust-Path-LPC2020)
* [Supporting Linux kernel development in Rust](https://lwn.net/SubscriberLink/829858/281103f9c6fd0dc2/)
* [video] [LPC 2020 - LLVM MC](https://youtu.be/FFjV9f_Ub9o)
* [Serverless Data Ingestion with Rust and AWS SES](http://jamesmcm.github.io/blog/2020/08/29/rust-ses/#en)
* [Refactoring Rust Transpiled from C](https://immunant.com/blog/2020/09/transpiled_c_safety/)

Number: 355  Date: 2020-09-09 

### Official
* [Planning the 2021 Roadmap](https://blog.rust-lang.org/2020/09/03/Planning-2021-Roadmap.html)
### Tooling
* [Rust Analyzer Changelog #41](https://rust-analyzer.github.io/thisweek/2020/09/07/changelog-41.html)
* [IntelliJ Rust Changelog #130](https://intellij-rust.github.io/2020/09/07/changelog-130.html)
### Newsletters
* [This Month in Rust GameDev #13 - August 2020](https://rust-gamedev.github.io/posts/newsletter-013/)
* [This Month in Rust OSDev (August 2020)](https://rust-osdev.com/this-month/2020-08/)
### Observations/Thoughts
* [Retrospective of my first useful Rust project](http://jamesmcm.github.io/blog/2020/09/05/vopono/#en)
### Learn Standard Rust
* [TR] [Rust Turu](https://tourofrust.com/00_tr.html)
* [A half-hour to learn Rust](https://fasterthanli.me/articles/a-half-hour-to-learn-rust)
* [Rust - understanding traits 1](https://dev.to/brunooliveira/rust-understanding-traits-1-45md)
* [That's so Rusty: Mutables](https://dev.to/imaculate3/that-s-so-rusty-mutables-5b40)
* [video] [Choosing Rust - Intro to Rust and Ownership](https://www.youtube.com/watch?v=DMAnfOlhSpU)
### Learn More Rust
* [Linux System Call `fork()` in Rust ](https://blog.knoldus.com/linux-system-call-fork-in-rust/)
* [Peeking inside a Rust enum](https://fasterthanli.me/articles/peeking-inside-a-rust-enum)
* [How to speed up the Rust compiler one last time](https://blog.mozilla.org/nnethercote/2020/09/08/how-to-speed-up-the-rust-compiler-one-last-time/)
* [Rust on Haiku: the Case of the Disappearing Deceased Threads](https://www.haiku-os.org/blog/nielx/2020-09-06_rust_on_haiku_the_case_of_the_disappearing_deceased_threads/)
* [C++ vs Rust: an async Thread-per-Core story](https://medium.com/@glaubercosta_11125/c-vs-rust-an-async-thread-per-core-story-28c4b43c410c)
* [Twistrs - Domain name enumeration library in Rust](https://blog.digital-horror.com/twistrs/)
* [If you want performance, cheat!](https://vorner.github.io/2020/09/03/performance-cheating.html)
* [Deserializing JSON really fast](https://blog.datalust.co/deserializing-json-really-fast/)
* [Intercepting Zoom's encrypted data with BPF](https://confused.ai/posts/intercepting-zoom-tls-encryption-bpf-uprobes)
  - **DISCLAIMER**: This article uses methods that could be used illegally in many areas worldwide. Please do not use such methods illegally. The This Week in Rust team and the Rust project leadership are not responsible for any illegal activity by readers.
* [Make A Language - Part Zero: Getting set up](https://arzg.github.io/lang/0)
* [Make A Language - Part One: A basic parser](https://arzg.github.io/lang/1)
* [Make A Language - Part Two: Whitespace support](https://arzg.github.io/lang/2)
* [Let's build a singl binary gRPC server-client with Rust in 2020 - Part 3](https://dev.to/tjtelan/let-s-build-a-single-binary-grpc-server-client-with-rust-in-2020-part-3-3fo8)
* [My Adventures in MMIO Abstraction](https://gist.github.com/Measter/2108508ba25ebe3978a6c10a1e01b9ad)
* [I C and .so does Rust](https://prateeknischal.github.io/i-c-and-so-does-rust/)
* [HTTP Status Codes With Rust](https://www.fpcomplete.com/blog/http-status-codes-async-rust/)
* [PL] [CrabbyBird #2 Poruszanie kamerą](https://postacnormalna.pl/ruch-kamery/)
* [video] [Using rust jni to call an external rust library in java](https://youtu.be/VIZK14pnGcw)
* [video] [1 - Basic Actix Web Server](https://youtu.be/HO-KMVXvXdA)
* [video] [2 - Creating the Tables](https://youtu.be/p22KFotfMYg)
* [video] [3 - Working with the Database](https://youtu.be/tK7qt0igtZA)
* [video] [4 - Getting the links](https://youtu.be/lxBxeKOZu3w)
### Project Updates
* [Rust testing or verifying: Why not both?](https://alastairreid.github.io/why-not-both/)
* [Learning Embedded Rust with Knurling-rs](https://ferrous-systems.com/blog/knurling-sessions-introduction/)
### Miscellaneous
* [Create an amazing Rust GitHub project in no time](https://www.marcoieni.com/2020/09/create-an-amazing-rust-github-project-in-no-time/)
* [Leaving the Rust core team](https://www.ncameron.org/blog/leaving-the-rust-core-team/)
* [Threadripper meets rustc](https://bobweb.co/article/threadripper-meets-rustc)
* [Understanding and Evolving the Rust Programming Language](https://people.mpi-sws.org/~jung/thesis.html)
* [Path Trimming in Nightly Rust](https://blog.aloni.org/posts/path-trimming-in-rust-nightly/)
* [Steve Klabnik Interview - "Rust isn't afraid to be imperfect as long as we ship something useful"](https://evrone.com/steve-klabnik-interview)
* [On finally learning to program at the age of 40](https://github.com/Dhghomon/programming_at_40/blob/master/README.md)
* [video] [Iota Identity-Diff Macro - Live Stream](https://youtu.be/1r094Uzz7A0)

Number: 356  Date: 2020-09-16 

No newsletters this week.
### Official
* [Launching the 2020 State of Rust Survey](https://blog.rust-lang.org/2020/09/10/survey-launch.html)
* [A call for contributors from the WG-prioritization team](https://blog.rust-lang.org/2020/09/14/wg-prio-call-for-contributors.html)
### Tooling
* [Rust Analyzer Changelog #42](https://rust-analyzer.github.io/thisweek/2020/09/14/changelog-42.html)
### Observations/Thoughts
* [Which Parsing Approach?](https://tratt.net/laurie/blog/entries/which_parsing_approach.html)
* [Challenging LR Parsing](https://rust-analyzer.github.io//blog/2020/09/16/challeging-LR-parsing.html)
* [What I Learnt from Benchmarking Http4k, Ktor (Kotlin) and Actix v2, v3 (Rust) Microservices](https://matej.laitl.cz/bench-rust-kotlin-microservices/)
* [No Namespaces in Rust is a Feature](https://samsieber.tech/posts/2020/09/registry-structure-influence/)
* [Building devserver: An Ultra-Tiny Rust Server](https://ianjk.com/devserver/)
* [Taming nalgebra's Rustdoc](https://jack.wrenn.fyi/blog/rustdocing-nalgebra/)
* [Rust in Science and ever-changing requirements](https://amanjeev.com/blog/rust-in-science-and-ever-changing-requirements)
* [From @Test to #[test]: an essay about testing between Java and Rust](https://mateuscosta.me/testing-between-java-and-rust)
### Learn Standard Rust
* [Collecting Data from an API](https://davidmaceachern.com/posts/collecting-data-from-an-api)
* [SQLite File Parser Pt. 1: The Header](https://wiredforge.com/blog/sqlite-parser-pt-1/index.html)
* [An introduction to Data Oriented Design with Rust](https://jamesmcm.github.io/blog/2020/07/25/intro-dod/)
* [Rust for Java developers](https://blog.codecentric.de/en/2020/09/rust-for-java-developers/)
* [Oxidizing portals with zbus](https://belmoussaoui.com/article/13-oxidizing-portals)
### Learn More Rust
* [Implementing Records in x7](https://dpbriggs.ca/blog/Implementing-Method-Calls-In-x7)
* [Let's build a single binary gRPC server-client with Rust in 2020 - Part 4](https://dev.to/tjtelan/let-s-build-a-single-binary-grpc-server-client-with-rust-in-2020-part-4-3k9f)
* [Make A Language - Part Three: Defining variables](https://arzg.github.io/lang/3/)
* [Rust HTTP Testing with httpmock](https://alexliesenfeld.com/posts/2020/rust-http-testing-with-httpmock/)
### Project Updates
* [Announcing the CCS811 indoor air quality sensor driver](https://blog.eldruin.com/ccs811-indoor-air-quality-sensor-driver-in-rust/).
* [OpenPGP in Rust: the Sequoia project](https://lwn.net/SubscriberLink/830902/b751810a99460a39/)
* [AssemblyLift v0.2 preview: RPC-based IO modules](https://dev.to/dotxlem/assemblylift-v0-2-preview-rpc-based-io-modules-2d38)
* [Announcing Actix Web v3.0](https://paper.dropbox.com/published/Announcing-Actix-Web-v3.0-QOXXb1lXgTubzXHzUq9ONY5)
### Miscellaneous
* [Your Language Sucks, It Doesn't Matter](https://matklad.github.io//2020/09/13/your-language-sucks.html)
* [Rust is #18 in the TIOBE Index for September 2020](https://www.tiobe.com/tiobe-index/)
* [A Few Github Action "Recipes" for Rust](https://shift.click/blog/github-actions-rust/)
* [Writing an x86 bootloader in Rust that can launch vmlinux](https://vmm.dev/en/rust/krabs.md)
* [video] [GOTO 2020 - Next-Generation Programming: Rust & Elm - Richard Feldman](https://youtu.be/ukVqQGbxM9A)
# Call for Blog Posts
The Rust Core Team wants input from the community!
If you haven't already, [read the official blog](https://blog.rust-lang.org/2020/09/03/Planning-2021-Roadmap.html) and submit a blog post - it will show up here!
Here are the wonderful submissions since the call for blog posts:
* [Rust in 2021](https://matklad.github.io/2020/09/12/rust-in-2021.html)
* [Rust 2021](https://hsivonen.fi/rust2021/)

Number: 357  Date: 2020-09-23 

No newsletters this week.
### Official
* [Call for 2021 Roadmap Blogs Ending Soon](https://blog.rust-lang.org/2020/09/21/Scheduling-2021-Roadmap.html)
* [Announcing the Error Handling Project Group](https://blog.rust-lang.org/inside-rust/2020/09/18/error-handling-wg-announcement.html)
* [Inside] [Intra-doc links close to stabilization](https://blog.rust-lang.org/inside-rust/2020/09/17/stabilizing-intra-doc-links.html)
### Tooling
* [IntelliJ Rust Changelog #131](https://intellij-rust.github.io/2020/09/21/changelog-131.html)
* [Rust Analyzer Changelog #43](https://rust-analyzer.github.io/thisweek/2020/09/21/changelog-43.html)
* [Knurling-rs Changelog #1](https://ferrous-systems.com/blog/knurling-changelog-1/)
### Observations/Thoughts
* [Porting EBU R128 audio loudness analysis from C to Rust](https://coaxion.net/blog/2020/09/porting-ebu-r128-audio-loudness-analysis-from-c-to-rust/)
* [Types Over Strings: Extensible Architectures in Rust](https://willcrichton.net/notes/types-over-strings/)
* [Why Not Rust?](https://matklad.github.io//2020/09/20/why-not-rust.html)
* [Why not rust for security?](https://www.cryptologie.net/article/505/why-not-rust-for-security/)
* [Why Rust is not a mature programming language](https://codecs.multimedia.cx/2020/09/why-rust-is-not-a-mature-programming-language/)
* [My Favorite Rust Signature](https://www.brandonsmith.ninja/blog/favorite-rust-function)
* [Is Rust a Functional Language in Disguise?](https://ceronman.com/2020/09/17/is-rust-a-functional-language-in-disguise/)
* [Async Iteration Semantics](https://blog.yoshuawuyts.com/async-iteration/)
* [A New Backend for Cranelift, Part 1: Instruction Selection](https://cfallin.org/blog/2020/09/18/cranelift-isel-1/)
* [Throw-away code](https://vorner.github.io/2020/09/20/throw-away-code.html)
* [I started to learn Rust](https://jean.manguy.eu/post/i-started-to-learn-rust/)
* [Pure AST based linting sucks](https://rdambrosio016.github.io/rust/2020/09/18/pure-ast-based-linting-sucks.html)
* [Potential improvements for Rust embedded abstractions](https://tweedegolf.nl/blog/42/potential-improvements-for-rust-embedded-abstractions)
### Learn Standard Rust
* [TL;DR Rust](https://christine.website/blog/TLDR-rust-2020-09-19)
* [Variables And Mutability In Rust](https://edfloreshz.blog/variables-and-mutability)
* [Rust For Beginners Workshop Track](https://rustlabs.kubedaily.com/Beginners/README.html)
* [Learning Rust: OMG WTF RS – resources to help you get started with Rust](https://ferrous-systems.com/blog/omg-wtf-rs-resources-to-help-you-get-started-with-rust/)
* [Write your own Rust compiler plugin in only 10 lines!](https://dev.to/sam3d/write-your-own-rust-compiler-plugin-in-only-10-lines-4df4)
* [Optional arguments in Rust](https://dev.to/virtualkirill/optional-arguments-in-rust-1e9g)
* [Implementation of Binary Search Tree in Rust](https://medium.com/@bkuliyev/implementation-of-binary-search-tree-in-rust-ce7ce479b505)
* [FR] [Le concept de “propriétaire” ou “ownership” en Rust](https://medium.com/@nunes.nelson4/le-concept-de-propri%C3%A9taire-ou-ownership-en-rust-c96d43c3375d)
* [TH] [Rustler 101: Ferris Say](https://dev.to/wingyplus/rustler-101-ferris-say-3jj6)
### Learn More Rust
* [Dynamic Iterators](https://hole.tuziwo.info/dyn-iterator.html)
* [Low-Level Academy](https://lowlvl.org/)
* [Writing an HTTP(S) Tunnel in Rust with tokio.](https://medium.com/@xnuter/writing-a-modern-http-s-tunnel-in-rust-56e70d898700)
* [Down the Yak Hole of TLS](https://blog.drogue.io/yak-hole-of-tls/)
* [That's so Rusty: Metaprogramming](https://dev.to/imaculate3/that-s-so-rusty-metaprogramming-49mj)
* [The Bevy Game Engine #1](https://dev.to/ethanyidong/the-bevy-engine-1-4k4k)
* [Face Detection in Node.js with Rust and WebAssembly](https://dev.to/alabulei1/high-performance-and-safe-ai-as-a-service-in-node-js-43lg)
* [video] [FLTK Rust: Using FLTK on Android](https://youtu.be/3jW_vxGmxt0)
### Project Updates
* [Announcing and Unpacking the New Holochain](https://medium.com/holochain/unpacking-the-new-holochain-f54da3ca99b7)
### Miscellaneous
* [Extended CfP deadline & new speaker perks!](https://blog.rustfest.eu/cfp-extension-new-speaker-perks)
* [Neovim and Rust](https://sharksforarms.dev/posts/neovim-rust/)
* [How I stopped worrying and started coding in Rust 🦀️](https://dev.to/yjdoc2/how-i-stopped-worrying-and-started-coding-in-rust-52b)
* [Haskell's Children](https://owenlynch.org/posts/2020-09-16-haskells-children/)
* [A Bazel Persistent Worker for Rust](https://nikhilism.com/post/2020/bazel-persistent-worker-rust/)
* [ESXi Binaries with Rust](https://sbaronda.com/2020/09/20/esxi-binaries-with-rust/)
* [j4rs: JavaFX support (WIP)](https://astonbitecode.github.io/blog/post/j4rs_javafx_support/)
* [Porting PineTime Watch Face from C to Rust On RIOT with LVGL](https://lupyuen.github.io/pinetime-rust-riot/articles/watch_face)
* [JP] [Rustのasyncでgoroutineの速度に勝つ](https://medium.com/nttlabs/rust-async-runtime-877b516d934d)
# Call for Blog Posts
The Rust Core Team wants input from the community!
If you haven't already, [read the official blog](https://blog.rust-lang.org/2020/09/03/Planning-2021-Roadmap.html) and submit a blog post - it will show up here!
Here are the wonderful submissions since the call for blog posts:
* [Rust 2021 - Ethical Development](https://llogiq.github.io/2020/09/21/ethics.html)
* [My Rust 2021 Wishlist for the 2021 Roadmap](https://estada.ch/2020/9/23/my-rust-2021-wishlist-for-the-2021-roadmap/)
* [Rust 2021: Lower the barriers](https://blog.nindalf.com/posts/rust-2021/)
* [Request for a better [patch] in cargo](https://longfangsong.github.io/2020/09/07/Rust-2021-Request-for-a-better-patch-in-cargo/)
* [What I wish for #Rust2021](https://haurchefant.fr/posts/what-i-wish-for-rust2021/)
* [Rust in 2021](https://www.ncameron.org/blog/rust-in-2021/)
* [Rust 2021](https://gist.github.com/mark-i-m/57b51099e02f2d1fb4d4a4bf08e92965)
* [As a hobbyist rust developer, I want to think less about error handling](https://mbuffett.com/posts/rust-less-error-handling/)
* [Rust 2021](https://gist.github.com/pickfire/3bcceeacf0bae22dd9f03c5053a976e3)
* [My Least Favorite Rust Type](https://ridiculousfish.com/blog/posts/least-favorite-rust-type.html)
* [My wish list for Rust 2021](https://sam-vente.com/blog/my-rust-2021-wishlist/index.html)
* [My Rust 2021 roadmap](https://www.reddit.com/r/rust/comments/imd8b8/my_rust_2021_roadmap/)
* [Rust Roadmap 2021: Allowing for arbitrary size integer primitives](https://therealprof.github.io/blog/roadmap-2021-arbitrary-size-primitives/)
* [Rust Roadmap 2021: Adding a useful dev mode and making it the default](https://therealprof.github.io/blog/roadmap-2021-usable-dev-mode/)
* [Rust in 2021](https://jyn514.github.io/2020/09/05/Rust-in-2021.html)
* [What's Stopping Me From Using Rust?](https://mgrech.dev/whats-stopping-me-from-using-rust/)
* [Pastebin submission](https://pastebin.com/d6jaxh7n)
* [Hacker News submission](https://news.ycombinator.com/item?id=24368077)

Number: 358  Date: 2020-09-30 

No newsletters this week.
### Official
* [Inside] [Announcing the Portable SIMD Project Group](https://blog.rust-lang.org/inside-rust/2020/09/29/Portable-SIMD-PG.html)
### Tooling
* [Rust Analyzer Changelog #44](https://rust-analyzer.github.io/thisweek/2020/09/28/changelog-44.html)
* [Knurling-rs Changelog #2](https://ferrous-systems.com/blog/knurling-changelog-2/)
### Observations/Thoughts
* [Benchmarking vol. 2: Pitting Actix against Rocket v0.4 and v0.5-dev](https://matej.laitl.cz/bench-actix-rocket/)
* [Optimization - Making Rust Code Go Brrrr](https://aspenuwu.me/posts/rust-optimization.html)
* [Revisiting a 'smaller Rust'](https://without.boats/blog/revisiting-a-smaller-rust/)
* [A Future for Rust Debugging](https://nbaksalyar.github.io/2020/05/19/rust-debug.html)
* [Learning Rust the Open Source Way](https://bitsbybrad.com/2020-09-29-learning-rust/)
* [So you want to live-reload Rust](https://fasterthanli.me/articles/so-you-want-to-live-reload-rust)
* [Drop order in Rust: It's tricky](https://vojtechkral.github.io/blag/rust-drop-order/)
### Learn Simple Rust
* [What’s new in Rust 1.46.0 about const_fn?](https://blog.knoldus.com/whats-new-in-rust-1-46-0/)
* [Rust: expression vs statement](https://dev.to/nickymeuleman/rust-expression-vs-statement-2h7g)
* [To Box or not to Box -- My First Real Rust Refactor](https://medium.com/@KevinHoffman/to-box-or-not-to-box-my-first-real-rust-refactor-db467119c4c7)
* [Bevy #2: Space Shooter - The Player](https://dev.to/ethanyidong/bevy-2-space-shooter-the-player-3e7d)
* [Cucumber in Rust - Beginner's Tutorial](https://www.florianreinhard.de/2020-08-16/cucumber-in-rust-beginners-tutorial/)
* [Data Types in Rust](https://edfloreshz.blog/data-types-in-rust)
* [video] [Rust 101](https://www.youtube.com/watch?v=wNzXj4eddDo&feature=youtu.be)
### Learn More Rust
* [Are we observable yet? An introduction to Rust telemetry - Zero To Production #4](https://www.lpalmieri.com/posts/2020-09-27-zero-to-production-4-are-we-observable-yet/)
* [A Fistful of States: More State Machine Patterns in Rust](https://deislabs.io/posts/a-fistful-of-states/)
* [OS in Rust: An executable that runs on bare metal: Part-1](https://blog.knoldus.com/os-in-rust-an-executable-that-runs-on-bare-metal-part-1/)
* [OS in Rust: An executable that runs on bare metal: Part-2](https://blog.knoldus.com/os-in-rust-an-executable-that-runs-on-bare-metal-part-2/)
* [Build a Discord Bot with Rust and Serenity](https://developers.facebook.com/blog/post/2020/09/30/build-discord-bot-with-rust-and-serenity/)
* [Porting EBU R128 audio loudness analysis from C to Rust – Porting Details](https://coaxion.net/blog/2020/09/porting-ebu-r128-audio-loudness-analysis-from-c-to-rust-porting-details/)
* [Building a runtime reflection system for Rust 🦀️ (Part 1)](https://www.osohq.com/post/rust-reflection-pt-1)
* [Rusty-PID: Porting the TSic sensor from C to Rust](https://nitschinger.at/Rusty-PID-Porting-the-TSic-sensor-from-C-to-Rust/)
* [Playing Codenames in Rust with word vectors](https://rolisz.ro/2020/09/26/playing-codenames-in-rust-with-word-vectors/)
* [Type-level Programming in Rust](https://willcrichton.net/notes/type-level-programming/)
* [Multi-threading with Wgpu and Rayon](https://sotrh.github.io/learn-wgpu/intermediate/tutorial13-threading/#threading-build-rs)
* [Flicker free fireworks (or how I accidentally rediscovered the regen buffer)](https://blog.darrien.dev/posts/flicker-free-fireworks/)
* [audio] [The Rustacean Station Podcast - WebAssembly on the Server with Krustlet](https://rustacean-station.org/episode/030-krustlet/)
* [video] [RIOT Summit 2020 - Safer & Simpler Embedded Programs with Rust on RIOT](https://www.youtube.com/watch?v=LvfCSnOM1Hs&feature=youtu.be)
* [video] [One Day Build - Anachro SPI pt 2](https://www.youtube.com/watch?time_continue=69&v=2vk9H9-O_pI&feature=emb_logo)
* [video] [Rusty USB Gadgets Make Barking BeagleBones](https://www.youtube.com/watch?v=NgdWeR1CvI8&feature=emb_logo)
### Project Updates
* [Krustlet v0.5.0 Release](https://github.com/deislabs/krustlet/releases/tag/v0.5.0)
* [oso, an open-source policy engine for authorization written in Rust](https://github.com/osohq/oso), added [a Rust library for implementing authorization for Rust projects!](https://docs.rs/oso/0.6.0-alpha/oso/)
* [Rust on the ESP32 & ESP8266 - Building an ecosystem](https://mabez.dev/blog/posts/esp-rust-ecosystem/)
* [What (not so) recently happened in Miri](https://www.ralfj.de/blog/2020/09/28/miri.html)
* [Progress report on rustc_codegen_cranelift (Sep 2020)](https://bjorn3.github.io/2020/09/28/progress-report-sep-2020.html)
### Miscellaneous
* [Supercharge your Electron apps with Rust](https://blog.logrocket.com/supercharge-your-electron-apps-with-rust/)
* [How to Make a 💡?](https://rust-analyzer.github.io/blog/2020/09/28/how-to-make-a-light-bulb.html)
* [Towards principled reactive UI](https://raphlinus.github.io/rust/druid/2020/09/25/principled-reactive-ui.html)
* [Building even faster interpreters in Rust](https://blog.cloudflare.com/building-even-faster-interpreters-in-rust/)
* [AMD Is Hiring To Work On New Radeon Driver Tooling Written In Rust](https://www.phoronix.com/scan.php?page=news_item&px=AMD-Hiring-Radeon-Rust)
* [Rust programming language exploit mitigations](https://rcvalle.blog/2020/09/16/rust-lang-exploit-mitigations/)
* [Custom Literals in Rust](https://www.5snb.club/posts/2020/09/25/custom-literals-in-rust.html)
# Call for Blog Posts
The Rust Core Team wants input from the community!
If you haven't already, [read the official blog](https://blog.rust-lang.org/2020/09/03/Planning-2021-Roadmap.html) and submit a blog post - it will show up here!
Here are the wonderful submissions since the call for blog posts:
* [Rust 2021: GUI](https://raphlinus.github.io/rust/druid/2020/09/28/rust-2021.html)
* [Rust 2021: maintain dominance on the web, easy funding, easier learning](https://www.reddit.com/r/rust/comments/j1ihax/rust_2021_maintain_dominance_on_the_web_easy/)
* [Rust 2021: Easier to integrate into existing codebases](https://www.reddit.com/r/rust/comments/j06zc9/rust_2021_easier_to_integrate_into_existing/)
* [Rust 2021: Continue](https://www.reddit.com/r/rust/comments/izk75l/rust_2021_continue/)
* [Rust 2021 | Features and Trait Bounds in Macros](https://blog.carminecrystal.com/rust-2021-features-and-trait-bounds-in-macros.html)
* [Rust 2021: Quality, frictionless tooling](https://swatinem.de/blog/rust-2021/)
* [My Rust 2021 roadmap: crates, concision, and community](http://jamesmcm.github.io/blog/2020/09/24/rust2021/#en)
* [Rust 2021 Roadmap Wishlist](https://aldaronlau.com/rust-2021/)
* [Rust in 2021: We've done a lot, more to be done](https://popzxc.github.io/rust-2021)
* [Rust in 2021: Leveraging the Type System for Infallible Message Buffers](https://christian.amsuess.com/blog/website/2020-09-24_rust_2021/)
* [Rust 2021](https://blog.coderspirit.xyz/blog/2020/09/26/rust-2021/)
* [Rust 2021: Minor major improvements](https://blog.thomasheartman.com/posts/rust-2021)
* [Rust 2021](https://beyermatthias.de/blog/2020/09/28/rust-2021/)
* [My Rust 2021](https://blog-dry.com/entry/2020/09/29/135738)

Number: 359  Date: 2020-10-07 

### Official
* [Inside] [1.47.0 pre-release testing](https://blog.rust-lang.org/inside-rust/2020/10/06/1.47.0-prerelease.html)
* [Inside] [1.47.0 second pre-release testing](https://blog.rust-lang.org/inside-rust/2020/10/06/1.47.0-prerelease.html)
### Newsletters
* [This Month in Rust OSDev (September 2020)](https://rust-osdev.com/this-month/2020-09/)
* [Rust in Blockchain Newsletter #16 - Secure Enclaves à la Crab](https://rustinblockchain.org/newsletters/2020-09-30-secure-enclaves-a-la-crab/)
* [This Month in Dimforge #1 (October 2020)](https://www.dimforge.com/blog/2020/10/01/this-month-in-dimforge/)
### Tooling
* [Rust Analyzer Changelog #45](https://rust-analyzer.github.io/thisweek/2020/10/05/changelog-45.html)
* [IntelliJ Rust Changelog #132](https://intellij-rust.github.io/2020/10/05/changelog-132.html)
### Observations/Thoughts
* [Why I scatter `use` statements throughout Rust code](https://tarquin-the-brave.github.io/blog/posts/rust_use_statements/)
* [Rust + Raspberry Pi Tide Clock](https://thefuntastic.com/blog/rust-tide-clock)
* [You're Allowed To Write Slow Rust Code](https://blog.jonstodle.com/youre-allowed-to-write-slow-rust-code/)
* [Rust meets the web - a clash of programming paradigms](https://www.jakobmeier.ch/blogging/Rust_on_the_Web.html)
* [Dynamic widget sketches](https://www.cmyr.net/blog/druid-dynamism.html)
* [Results of Authoring a JS Library with Rust and Wasm](https://nickb.dev/blog/results-of-authoring-a-js-library-with-rust-and-wasm)
* [Ringbahn III: A deeper dive into drivers](https://without.boats/blog/ringbahn-iii/)
* [Fast Thread Locals In Rust](https://matklad.github.io/2020/10/03/fast-thread-locals-in-rust.html)
* [Formicarium](https://gliderkite.github.io/posts/formicarium/)
### Learn Simple Rust
* [Dancing Links In Rust](https://ferrous-systems.com/blog/dlx-in-rust/)
* [Getting Started with the nRF52840 in Rust](https://nitschinger.at/Getting-Started-with-the-nRF52840-in-Rust/)
* [That's so Rust!: Smart pointers](https://dev.to/imaculate3/that-s-so-rusty-smart-pointers-245l)
* [video] [Test-Based and Graphical User Interfaces | Rust Project](https://youtu.be/dK9-oXptFcM)
### Learn More Rust
* [8 Solutions for Troubleshooting Your Rust Build Times](https://medium.com/@jondot/8-steps-for-troubleshooting-your-rust-build-times-2ffc965fd13e)
* [Benchmarking Apache Cassandra with Rust](https://pkolaczk.github.io/benchmarking-cassandra/)
* [Operating System development tutorials in Rust on the Raspberry Pi](https://github.com/rust-embedded/rust-raspberrypi-OS-tutorials)
* [Learning Embedded Rust with Knurling-rs](https://ferrous-systems.com/blog/knurling-sessions-introduction/)
* [Building a Weater Station Bot](https://blog.kdubovikov.ml/articles/rust/building-a-weather-station-bot)
* [Next-Gen Rust Web Apps: Towards a Svelte Fulcro in Rust](https://blog.shortepic.com/blog/first/)
* [Next-Gen Rust Web Apps: TicTacToe in Valerie](https://blog.shortepic.com/blog/second/)
* [Next-Gen Rust Web Apps: Borrowing From Fulcro for your Rust WASM Spa](https://blog.shortepic.com/blog/third/)
* [Make A Language - Part Four: Backtracking](https://arzg.github.io/lang/4/)
* [Make A Language - Part Five: Binding Usages](https://arzg.github.io/lang/5/)
* [Make A Language - Part Six: Blocks](https://arzg.github.io/lang/6/)
* [Make A Language - Part Seven: A REPL](https://arzg.github.io/lang/7/)
* [audio] [What we've learned porting our apps to Windows - Astropad](https://astropad.com/what-weve-learned-porting-our-apps-to-windows/)
* [video] [Build a Discord Bot with Rust and Serenity](https://www.youtube.com/playlist?list=PLzIwronG0sE5lQCPFP69Ukgz4d9dngaSi)
### Project Updates
* [Headcrab: September 2020 progress report](https://headcrab.rs/2020/10/01/september-update.html)
### Miscellaneous
* [/r/rust is partnering with the Rust communities on Discord, Mozilla's Matrix, and Stack Overflow as venues for "IRC-like" real-time chat](https://www.reddit.com/r/rust/comments/j6b03y/rrust_is_partnering_with_the_rust_communities_on/)
* [[Mesa-dev] Rust drivers in Mesa](https://lists.freedesktop.org/archives/mesa-dev/2020-October/224639.html)
* [Designing a New Rust Class at Stanford: Safety in Systems Programming](https://reberhardt.com/blog/2020/10/05/designing-a-new-class-at-stanford-safety-in-systems-programming.html)
* [Memory Safety Alternative](https://github.com/finegeometer/articles/blob/master/memory-safety-alternative.md)
# Call for Blog Posts
The Rust Core Team wants input from the community!
If you haven't already, [read the official blog](https://blog.rust-lang.org/2020/09/03/Planning-2021-Roadmap.html) and submit a blog post - it will show up here!
Here are the wonderful submissions since the call for blog posts:
* [Rust 2021: APIs, ORMS and standards](https://medium.com/@v.mishra/rust-2021-apis-orms-and-standards-bfdf3ddc15a0)
* [Rust 2021 - Stability](https://jackh726.github.io/rust/2020/10/01/rust-2021.html)
* [The Rust Organization in 2021](https://tmandry.gitlab.io/blog/posts/rust-2021-organization/)
* [Rust 2021](https://nikhilism.com/post/2020/rust-2021/)
* [Rust 2021: lowering barriers](https://gist.github.com/samsieber/e976664ba333fd8a0b5f3b0ba167cb76#file-rust-2021-md)
* [Rust 2021](https://markentier.tech/posts/2020/10/rust-2021/)
* [The Rust 2021 Experience - Year of the Macro](https://casualhacks.net/blog/2020-10-05/the-rust-2021-experience-macros/)
* [The Rust Project in 2021](https://tmandry.gitlab.io/blog/posts/rust-2021-project/)

Number: 360  Date: 2020-10-14 

### Official
* [Announcing Rust 1.47.0](https://blog.rust-lang.org/2020/10/08/Rust-1.47.html)
### Newsletters
* [This Month in Rust GameDev #14](https://rust-gamedev.github.io/posts/newsletter-014/)
### Tooling
* [Rust Analyzer Changelog #46](https://rust-analyzer.github.io/thisweek/2020/10/12/changelog-46.html)
* [Two videos about rust code coverage in VSCode](https://www.marcoieni.com/2020/10/2-videos-about-rust-code-coverage-in-vscode/)
### Observations/Thoughts
* [Rust after the honeymoon](http://dtrace.org/blogs/bmc/2020/10/11/rust-after-the-honeymoon/)
* [Building the Fastest RaptorQ (RFC6330) Codec in Rust](https://www.cberner.com/2020/10/12/building-fastest-raptorq-rfc6330-codec-rust/)
* [Learning Rust through open source and live code reviews](https://loige.co/learning-rust-through-open-source-and-live-code-reviews/)
* [My Mistakes Making a Canvas Based Game with Rust and WebAssembly](https://dev.to/fallenstedt/making-a-canvas-based-game-with-rust-and-webassembly-2l46)
* [A New Backend for Cranelift, Part 1: Instruction Selection](https://hacks.mozilla.org/2020/10/a-new-backend-for-cranelift-part-1-instruction-selection/)
* [Optional parameters in Rust](https://vidify.org/blog/rust-parameters/)
* [Building an async-compatible actor system](https://github.com/Diggsey/posts/blob/master/actor-systems/README.md)
* [video] [Contract as Code as Contract: Using Rust to Unify Specification and Implementation](https://youtu.be/EmSjZbSzA3A)
### Learn Simple Rust
* [Iterators in Rust](https://blog.thoughtram.io/iterators-in-rust/)
* [Learn Rust by building the game Snake](https://blog.scottlogic.com/2020/10/08/lets-build-snake-with-rust.html)
* [That's so Rusty! Fearless concurrency](https://dev.to/imaculate3/fearless-concurrency-5fk8)
* [Making a Simple Calculator in Rust](https://dev.to/yjdoc2/making-a-simple-calculator-in-rust-d65)
* [Patterns of fallible iteration](https://morestina.net/blog/1607/fallible-iteration)
* [video] [Learn Rust Together Part 5: Structs and Enums!](https://www.youtube.com/watch?v=Iy5pvVPZT50)
* [video] [3. #everyonecancontribute cafe: Gitpod & learning Rust](https://youtu.be/ewDAOLTto-A)
### Learn More Rust
* [Deploying a Rust HTTP server to DigitalOcean App Platform](https://pretired.dazwilkin.com/posts/201008/)
* [Make A Language - Part Eight: Function Definitions](https://arzg.github.io/lang/8/)
* [Supercharge your Electron apps with Rust](https://blog.logrocket.com/supercharge-your-electron-apps-with-rust/)
* [ZH] [Build a Shoot 'em up game with framework Amethyst](https://yodalee.me/2020/06/introduction/)
* [video] [Rust FFI: Microsoft Flight Simulator SDK Part 1](https://youtu.be/jNNz4h3iIlw)
* [video] [Fuzz Testing popular Rust library in 5 min using cargo-fuzz / libfuzzer](https://youtu.be/W0ZRZyljKjo)
### Project Updates
* [Rust in Curl with Hyper](https://daniel.haxx.se/blog/2020/10/09/rust-in-curl-with-hyper/)
* [Memory Safe 'curl' for a More Secure Internet](https://www.abetterinternet.org/post/memory-safe-curl/)
* [Version 0.7 of calloop](https://smithay.github.io/calloop-v-0-7.html)
### Miscellaneous
* [Collect in Rust, Traverse in Haskell and Scala](https://www.fpcomplete.com/blog/collect-rust-traverse-haskell-scala/)
* [Proving that 1 + 1 = 2 in Rust](https://gist.github.com/gretingz/bc194c20a2de2c7bcc0f457282ba2662)
* [What should I program?](http://jamesmcm.github.io/blog/2020/10/11/programming-projects/#en)
* [Getting back to C++ after Rust is a pain.](https://www.reddit.com/r/rust/comments/ja5aoe/getting_back_to_c_after_rust_is_a_pain/)
# Call for Blog Posts
The Rust Core Team wants input from the community!
If you haven't already, [read the official blog](https://blog.rust-lang.org/2020/09/03/Planning-2021-Roadmap.html) and submit a blog post - it will show up here!
Here are the wonderful submissions since the call for blog posts:

Number: 361  Date: 2020-10-21 

No newsletters this week.
### Official
* [Marking issues as regressions](https://blog.rust-lang.org/2020/10/20/regression-labels.html)
* [Inside] [Lang team Backlog Bonanza and Project Proposals](https://blog.rust-lang.org/inside-rust/2020/10/16/Backlog-Bonanza.html)
### Tooling
* [Rust-Analyzer Changelog #47](https://rust-analyzer.github.io/thisweek/2020/10/19/changelog-47.html)
* [IntelliJ Rust Changelog #133](https://intellij-rust.github.io/2020/10/19/changelog-133.html)
### Observations/Thoughts
* [Fearless concurrency: how Clojure, Rust, Pony, Erlang and Dart let you achieve that.](https://sites.google.com/a/athaydes.com/renato-athaydes/posts/fearlessconcurrencyhowclojurerustponyerlanganddartletyouachievethat)
* [Shock Result<>?: Rust faster than Python in one test of file parsing](http://www.coralbark.net/blog/technology/2020/10/shock-result-rust-faster-than-python-in-one-test-of-file-parsing/)
* [Building a Recipe Manager - Part 2 - Druid Experience Report](https://bheisler.github.io/post/recipe-manager-part-2-druid-experience-report/)
* [No, C++ still isn't cutting it.](https://da-data.blogspot.com/2020/10/no-c-still-isnt-cutting-it.html)
* [A pitfall of Rust's move/copy/drop semantics and zeroing data](https://benma.github.io/2020/10/16/rust-zeroize-move.html)
* [Proving that 1 + 1 = 10 in Rust](https://tavianator.com/2020/one_plus_one.html)
* [Study of std::io::Error](https://matklad.github.io/2020/10/15/study-of-std-io-error.html)
* [Fun With Rust's Traits](https://samwho.dev/blog/fun-with-rust-traits/)
### Learn Simple Rust
* [Arrays, vectors and slices in Rust](https://hashrust.com/blog/arrays-vectors-and-slices-in-rust/)
* [Building Your Own Error Type: Part 1](https://yaah.dev/building-your-own-error-type)
* [Lifetimes in Rust](https://blog.thoughtram.io/lifetimes-in-rust/)
* [Piece by Piece: Write Readable Rust Code](https://impl.dev/posts/write-readable-rust-code/)
* [Are out parameters idiomatic in Rust?](https://steveklabnik.com/writing/are-out-parameters-idiomatic-in-rust)
* [Non-Generic Inner Functions](https://www.possiblerust.com/pattern/non-generic-inner-functions)
* [Creating a Snake Clone in Rust, with Bevy](https://mbuffett.com/posts/bevy-snake-tutorial/)
* [Create Your Own PineTime Watch Face in Rust... And Publish on crates.io](https://lupyuen.github.io/pinetime-rust-mynewt/articles/watchface)
* [Either Types for Rust](https://dev.to/sirech/either-types-for-rust-46k4)
* [Rust syntax: What is the questionmark?](https://dev.to/nickymeuleman/rust-syntax-what-the-questionmark-2n58)
* [Private Methods on a Public Trait](https://jack.wrenn.fyi/blog/private-trait-methods/)
* [Learn Rust with Benford's Law](https://gliderkite.github.io/posts/learn-rust-with-benford/)
* [How to Write Hygienic Rust Macros](https://gist.github.com/Koxiaet/8c05ebd4e0e9347eb05f265dfb7252e1)
* [video] [Rust Linz, October 2020 - Valentin Tolmer - How not to rely on inheritance](https://youtu.be/m6Gee5kNe7U)
### Learn More Rust
* [Building a runtime reflection system for Rust 🦀️ (Part 2)](https://www.osohq.com/post/runtime-reflection-pt-2)
* [Compile Rust for Raspberry Pi ARM](https://medium.com/swlh/compiling-rust-for-raspberry-pi-arm-922b55dbb050)
* [Basic non-blocking IO using epoll in Rust](https://zupzup.org/epoll-with-rust/)
* [Debugging async generator errors in Rust](https://meltware.com/2020/10/21/rust-async-nonsense.html)
* [video] [(Live Coding) Audio adventures in Rust: Spotify integration](https://youtu.be/5q4NB9WdYIo)
* [video] [Rust Linz, October 2020 - Matthias Heiden - Writing a Kernel Driver with Rust](https://youtu.be/wREGR7QQHco)
### Project Updates
* [Announcing Tokio 0.3 and the path to 1.0](https://tokio.rs/blog/2020-10-tokio-0-3)
* [oso, an open-source policy engine for authorization written in Rust](https://github.com/osohq/oso), released [version 0.7.0 of their authorization library for Rust projects!](https://docs.rs/oso/0.7.0/oso/)
* ⚡️ [Dotenv-linter v2.2.0: find and fix problems in .env files](https://evrone.com/dotenv-linter-v220)
* [Version 0.3.0 of cargo-wipe has been released](https://github.com/mihai-dinculescu/cargo-wipe)
### Miscellaneous
* [A new look, tickets and what's to come](https://blog.rustfest.eu/a-new-look)
* [ICU4X Project Announcement](https://github.com/unicode-org/icu4x/wiki/ICU4X-Project-Announcement)
* [Kata Containers rewritten in Rust gets a major speed boost](https://www.zdnet.com/article/kata-containers-rewritten-in-rust-and-gets-a-major-speed-boost/)
* [Assorted thoughts on zig (and rust)](https://scattered-thoughts.net/writing/assorted-thoughts-on-zig-and-rust/)
* [Flask Creator Armin Ronacher Interview](https://evrone.com/armin-ronacher-interview)
* [A recipe for start using Rust actix-web and launch chrome 🚀](https://itnext.io/a-recipe-for-starting-actix-web-server-and-launch-chrome-b792987935a)
* [Sailfish OS 3.4 Released with Experimental Rust Support, Finally Eyeing 64-bit ARM](https://www.phoronix.com/scan.php?page=news_item&px=Sailfish-OS-3.4-Released)
* [Create Your Own PineTime Watch Face in Rust... And Publish on crates.io](https://lupyuen.github.io/pinetime-rust-mynewt/articles/watchface)
* [Getting started with Datalog & Rust for program analysis](https://hexgolems.com/2020/10/getting-started-with-ddlog/)
* [Three open source Sonos projects: efficient embedded development in Rust](https://tech-blog.sonos.com/posts/three-open-source-sonos-projects-in-rust/)

Number: 362  Date: 2020-10-28 

No newsletters this week.
### Official
* [Inside] [Core team membership changes](https://blog.rust-lang.org/inside-rust/2020/10/23/Core-team-membership.html)
### Tooling
* [Rust Analyzer Changelog #48](https://rust-analyzer.github.io/thisweek/2020/10/26/changelog-48.html)
* [Knurling-rs Changelog #3](https://ferrous-systems.com/blog/knurling-changelog-3/)
### Observations/Thoughts
* [Fighting Rust's Expressive Type System](https://thefuntastic.com/blog/fighting-rusts-type-system)
* [XMHell: Handling 38GB of UTF-16 XML with Rust](http://usethe.computer/posts/14-xmhell.html)
* [LudumDare 47 - The Island](https://blog.kuviman.com/2020/10/18/ludumdare47.html)
* [Building a Recipe Manager - Part 3 - Parsing and more Druid](https://bheisler.github.io/post/recipe-manager-part-3-parsing-and-more-druid/)
* [Imitating specialization with OIBITs](https://pwychowaniec.com/en/posts/imitating-specialization-with-oibits/)
* [Flask Creator Armin Ronacher Interview](https://evrone.com/armin-ronacher-interview)
* [clue solver now in Rust with more accurate simulations!](https://gregstoll.wordpress.com/2020/10/22/clue-solver-now-in-rust-with-more-accurate-simulations/)
### Learn Rust
* [Rust for a Gopher Lesson 1](https://levpaul.com/posts/rust-lesson-1/)
* [Rust for a Gopher Lesson 2](https://levpaul.com/posts/rust-lesson-2/)
* [Build a "todo list" backend with AssemblyLift 🚀🔒](https://dev.to/dotxlem/build-a-todo-list-backend-with-assemblylift-1ak3)
* [So you want to write object oriented Rust](https://blog.darrien.dev/posts/so-you-want-to-object/)
* [series] [A Web App in Rust](https://dev.to/krowemoh/series/9410)
* [Contributing to the IntelliJ Rust plugin: Implementing a refactoring](https://kobzol.github.io/rust/intellij/2020/10/19/contributing-4-introduce-constant-refactoring.html)
* [5x Faster Rust Docker Builds with cargo-chef](https://www.lpalmieri.com/posts/fast-rust-docker-builds)
* [Writing a simple AWS Lambda Custom Runtime in Rust](http://jamesmcm.github.io/blog/2020/10/24/lambda-runtime/#en)
* [Is Rust Web Yet? Yes, and it's freaking fast!](http://www.arewewebyet.org/)
* [video] [(Live Coding) Audio adventures in Rust: Local files playback & library interface](https://youtu.be/-tj7ODHX93o)
### Project Updates
* [Introducing Ungrammar](https://rust-analyzer.github.io//blog/2020/10/24/introducing-ungrammar.html)
* A new group of maintainers has taken ownership of the [deps.rs project](https://github.com/deps-rs/deps.rs) and revived the [deps.rs page](https://deps.rs), making the page and generated badges for READMEs usable again.
### Miscellaneous
* [Sandbox Rust Development with Rust Analyzer](https://www.grepular.com/Sandbox_Rust_Development_with_Rust_Analyzer)
* [audio] [Security Headlines: Tokio special with Carl Lerche](https://blog.firosolutions.com/2020/10/tokio_special_with_carl_lerche/)

Number: 363  Date: 2020-11-04 

No Rust Blog posts this week.
### Newsletters
* [RiB Newsletter #17 - Trick? Or Trait?](https://www.reddit.com/r/rust/comments/job17k/rib_newsletter_17_trick_or_trait/)
* [This month in Dimforge #2 (October 2020)](https://www.dimforge.com/blog/2020/11/01/this-month-in-dimforge/)
* [These Weeks in Actix | Sep-Oct '20](https://www.reddit.com/r/rust/comments/jkv5xu/these_weeks_in_actix_sepoct_20/)
### Tooling
* [Rust-Analyzer Changelog #49](https://rust-analyzer.github.io/thisweek/2020/11/02/changelog-49.html)
* [IntelliJ Rust Changelog #134](https://intellij-rust.github.io/2020/11/02/changelog-134.html)
* [IntelliJ Rust: New Functionality for Cargo Features](https://blog.jetbrains.com/clion/2020/10/intellij-rust-new-functionality-for-cargo-features/)
### Observations/Thoughts
* [Semantic FFI Bindings in Rust - Reactivating the Borrow Checker](https://blog.schichler.dev/semantic-ffi-bindings-in-rust-reactivating-the-borrow-checker-ckgxtoxo8057pwrs174dqhcsi)
* [Exception safety in Rust: using transient droppers to prevent memory leaks](http://ngr.yt/blog/2020-11-03-exception-safety-in-rust-using-transient-droppers-to-prevent-memory-leaks.html)
* [Wasmcloud Progress](https://christine.website/blog/wasmcloud-progress-domains-2020-10-31)
* [Fast programming languages: C, C++, Rust, and Assembly](http://tempesta-tech.com/blog/fast-programming-languages-c-c++-rust-assembly)
* [For Complex Applications, Rust is as Productive as Kotlin](https://ferrous-systems.com/blog/rust-as-productive-as-kotlin/)
* [Rust for Data-Intensive Computation](https://github.com/frankmcsherry/blog/blob/master/posts/2020-06-09.md)
* [Using Rust for a simple hardware project](https://blog.tonari.no/rust-simple-hardware-project)
* [The Fatal Flaw of Ownership Semantics](http://www.gingerbill.org/article/2020/06/21/the-ownership-semantics-flaw/)
* [Fixing bootstrap of rustc using cg_clif](https://bjorn3.github.io/2020/11/01/fixing-rustc-bootstrap-with-cg_clif.html)
* [Advanced Cargo [features] Usage](https://blog.turbo.fish/cargo-features/)
### Rust Walkthroughs
* [Rust Design-for-Testability: a survey](https://alastairreid.github.io/rust-testability/)
* [Rust from a Gopher - Lessons 3 & 4](https://levpaul.com/posts/rust-lesson-3-and-4/)
* [Rocket Tutorial 01: Basics](https://dev.to/davidedelpapa/rocket-tutorial-01-basics-4ph9)
* [Building an AWS Lambda extension with Rust](https://dev.to/davidedelpapa/rocket-tutorial-01-basics-4ph9)
* [A Gopher Client in Rust - 02 Core Client](https://dev.to/krowemoh/gopher-client-in-rust-02-core-client-anh)
* [A Gopher Client in Rust - 03 Bookmarks and Full Code](https://dev.to/krowemoh/gopher-client-in-rust-03-extras-4o4d)
* [Rust HTTP Testing with httpmock](https://dev.to/alexliesenfeld/rust-http-testing-with-httpmock-2mi0)
* [The Newtype Pattern in Rust](https://www.worthe-it.co.za/blog/2020-10-31-newtype-pattern-in-rust.html)
* [How to: Rust + SDL2 + OpenGL on the web](https://blog.therocode.net/2020/10/a-guide-to-rust-sdl2-emscripten)
* [Minicompiler: Lexing](https://christine.website/blog/minicompiler-lexing-2020-10-29)
* [Continuous Deployment For Rust Applications (Zero To Production In Rust #5)](https://www.lpalmieri.com/posts/2020-11-01-zero-to-production-5-how-to-deploy-a-rust-application/)
* [DE] [The Rust Programming Language (translated in German)](https://rust-lang-de.github.io/rustbook-de/)
* [video] [(Live Coding) Audio adventures in Rust: UI with WASM, Yew, and WebView](https://youtu.be/FaSoPcyOqPE)
* [video] [How to build a multiplayer game - RustFest.Global Pre-Event (Video)](https://www.youtube.com/watch?v=Yb-QR3Vm3sk)
* [video] [Current state of wasm with rust using an example](https://youtu.be/DxzIH1RrIxE)
* [video] [Understanding Rust Lifetimes](https://youtu.be/MSi3E5Z8oRw)
### Project Updates
* [oso, an open-source policy engine for authorization written in Rust](https://github.com/osohq/oso), released [version 0.7.1 of their authorization library for Rust projects!](https://docs.rs/oso/0.7.1/oso/)
* [Apache Arrow 2.0.0 Rust Highlights](https://arrow.apache.org/blog/2020/10/27/rust-2.0.0-release/)
### Miscellaneous
* [One Hundred Rust Binaries](https://www.wezm.net/v2/posts/2020/100-rust-binaries/)
* [Why Dark didn't choose Rust](https://blog.darklang.com/why-dark-didnt-choose-rust/)
* [Rust GameDev Ecosystem Survey](https://www.reddit.com/r/rust/comments/joj5e0/rust_gamedev_ecosystem_survey/)

Number: 364  Date: 2020-11-11 

### Official
* [Inside] [Exploring PGO for the Rust compiler](https://blog.rust-lang.org/inside-rust/2020/11/11/exploring-pgo-for-the-rust-compiler)
### Newsletters
* [This Month in Rust OSDev (October 2020)](https://rust-osdev.com/this-month/2020-10/)
* [This Month in Rust GameDev #15 - October 2020](https://rust-gamedev.github.io/posts/newsletter-015/)
### Tooling
* [Rust-Analyzer Changelog #50](https://rust-analyzer.github.io/thisweek/2020/11/09/changelog-50.html)
* [Develop & Debug Your Rust Application Top Of Kubernetes With OKteto](https://okteto.com/blog/getting-started-with-okteto-and-rust/)
### Observations/Thoughts
* [Rust Ray Tracer, an Update (and SIMD)](https://siliconsprawl.com/2020/11/06/simd-ray-tracer.html)
* [Rust emit=asm Can Be Misleading](https://siliconsprawl.com/2020/11/09/rust-emit-asm.html)
* [A survey into static analyzers configurations: Clippy for Rust, part 1](https://medium.com/monocodus/a-survey-into-static-analyzers-configurations-clippy-for-rust-part-1-5de50fd9326)
* [Why Rust is the Future of Game Development](https://thefuntastic.com/blog/why-rust-is-the-future-game-dev?)
* [Rust as a productive high-level language](https://omarabid.com/rust-high-level-language)
* [40 millisecond bug](https://vorner.github.io/2020/11/06/40-ms-bug.html)
* [Postfix macros in Rust](https://gist.github.com/est31/8d0465997ea920c5ba917cbbf80a822d)
* [A Quick Tour of Trade-offs Embedding Data in Rust](https://nickb.dev/blog/a-quick-tour-of-trade-offs-embedding-data-in-rust)
* [Why Developers Love Rust](https://ibraheem.ca/posts/why-devs-love-rust)
### Rust Walkthroughs
* [Make a Language - Part Nine: Function Calls](https://arzg.github.io/lang/9/)
* [Building a Weather Station UI](https://blog.kdubovikov.ml/articles/rust/ui/weather-station-ui)
* [Getting Graphical Output from our Custom RISC-V Operating System in Rust](https://blog.stephenmarz.com/2020/11/11/risc-v-os-using-rust-graphics/)
* [Build your own: GPG](https://andrewhalle.github.io/build-your-own/gpg)
* [Rpi 4 meets Flutter and Rust](https://dev.to/charliefoxtrot/rpi-4-meets-flutter-and-rust-23ma)
* [AWS Lambda + Rust](https://dev.to/rad_val_/aws-lambda-rust-292g)
* [Orchestration in Rust](https://dev.to/elasticrash/orchestration-in-rust-549b)
* [Rocket Tutorial 02: Minimalist API](https://dev.to/davidedelpapa/rocket-tutorial-02-minimalist-api-2kl6)
* [Get simple IO stats using Rust (throughput, ...)](https://dev.to/martichou/get-simple-io-stats-using-rust-throughput-47m4)
* [Type-Safe Discrete Simulation in Rust](https://dev.to/elshize/type-safe-discrete-simulation-in-rust-3n7d)
* [series] [A Gemini Client in Rust](https://dev.to/krowemoh/series/9524)
* [Postfix macros in Rust](https://gist.github.com/est31/8d0465997ea920c5ba917cbbf80a822d)
* [Processing a Series of Items with Iterators in Rust](https://blog.knoldus.com/processing-a-series-of-items-with-iterators-in-rust/)
* [Compilation of Active Directory Logs Using Rust](https://blog.knoldus.com/compilation-of-active-directory-logs-using-rust/)
* [FR] [The Rust Programming Language (translated in French)](https://jimskapt.github.io/rust-book-fr/)
### Project Updates
* [New doc comment handling in rustdoc](https://blog.guillaume-gomez.fr/articles/2020-11-11+New+doc+comment+handling+in+rustdoc)
### Miscellaneous
* [Rust vs Go](https://bitfieldconsulting.com/golang/rust-vs-go)
* [Learn Assembly by Writing Entirely Too Many Brainf*ck Compilers in Rust](https://github.com/pretzelhammer/rust-blog/blob/master/posts/too-many-brainfuck-compilers.md)

Number: 365  Date: 2020-11-18 

### Official
* [Announcing Rust 1.48.0](https://blog.rust-lang.org/2020/11/19/Rust-1.48.html)
* [Inside] [Source-based code coverage in nightly](https://blog.rust-lang.org/inside-rust/2020/11/12/source-based-code-coverage.html)
### Newsletters
### Tooling
* [IntelliJ Rust Changelog #135](https://intellij-rust.github.io/2020/11/16/changelog-135.html)
* [Rust-Analyzer Changelog #51](https://rust-analyzer.github.io/thisweek/2020/11/16/changelog-51.html)
* [Knurling-rs Changelog #6](https://ferrous-systems.com/blog/knurling-changelog-6/)
### Observations/Thoughts
* [ECS Scheduler Throughs, Part 1](https://ratysz.github.io/article/scheduling-1/)
* [Generating a config file reference for CLI tools in Rust](https://tarquin-the-brave.github.io/blog/posts/generating-config-reference-rust-cli/)
* [Rust in 2021](https://dev.to/tjtelan/rust-in-2021-5p6)
* [Anonymous Sum Types for Rust Error Handling](https://jam1.re/blog/anonymous-sum-types-for-rust-errors)
* [The C Standard Library Is Not Dependency Free](https://prilik.com/blog/post/c-is-not-dependency-free/)
* [Scoped Trait Implementation](https://jack.wrenn.fyi/blog/private-trait-impls/)
### Rust Walkthroughs
* [SQLite File Parser Pt. 2: The Header... continues](https://freemasen.com//blog/sqlite-parser-pt-2/index.html)
* [Rust from a Gopher - Lessons 7, 8 & 9](https://levpaul.com/posts/rust-lesson-7-8-9/)
* [Writing an embedded display driver in Rust](https://nitschinger.at/Writing-an-embedded-display-driver-in-Rust/)
* [Rocket Tutorial 03: Proper routing](https://dev.to/davidedelpapa/rocket-tutorial-03-proper-routing-4ch3)
* [Intro to Yew, a Rust Frontend Framework](https://dev.to/fllstck/intro-to-yew-a-rust-frontend-framework-20hb)
* [An Ownership Puzzle with Rust, Async, and Hyper](https://www.fpcomplete.com/blog/ownership-puzzle-rust-async-hyper/)
* [Make A Language - Part Ten: Starting Again](https://arzg.github.io/lang/10/)
* [Make A Language - Part Eleven: Refinements](https://arzg.github.io/lang/11/)
* [OS in Rust: Custom target to build kernel for a bare metal: Part-3](https://blog.knoldus.com/os-in-rust-custom-target-to-build-kernel-for-a-bare-metal-part-3/)
* [Creating a Tetris Clone in Rust, with Bevy (Part 1)](https://corbamico.github.io/2020/11/12/tetris-1/)
* [PL] [CrabbyBird #3 Generowanie świata gry – cześć I](https://postacnormalna.pl/crabbybird-3-generowanie-swiata-gry-czesc-i/)
* [video] [Crust of Rust: Sorting Algorithms](https://youtu.be/h4RkCyJyXmM)
* [video] [(Live Coding) Audio adventures in Rust: UI with Actix, WebView, and React](https://youtu.be/vmvq9jKBlGc)
### Project Updates
* [The Big Picture of gfx/wgpu ecosystem](https://gfx-rs.github.io/2020/11/16/big-picture.html)
* [xd(1): hex-dumping tool with a ♥♪ code page 437 twist ♫♥](https://www.azabani.com/2020/11/15/xd.html)
* [Fwumious Wabbit: really fast logistic regression (+more) in Rust](https://andraztori.medium.com/speed-is-a-feature-introducing-fwumious-wabbit-1cc9573ea7be)
* [Rust for Modding Smash Ultimate](https://jam1.re/blog/rust-for-game-modding)
* [reacty_yew: Generating Yew components from React components via Typescript type definitions](https://www.hobofan.com/blog/2020-11-10-reacty_yew/)
* [Servo's New Home](https://blog.servo.org/2020/11/17/servo-home/)
### Miscellaneous
* [Dog Fight — Python VS Golang VS Rust for JSON Processing](https://medium.com/swlh/dog-fight-python-vs-golang-vs-rust-for-json-processing-33c1ffe15ab9)
* [Build an SMS Alert System over the weekend with Rust and Zero-Cost](https://towardsdatascience.com/build-an-sms-alert-system-for-canada-covid-19-cases-over-the-weekend-with-rust-and-zero-cost-235bb59ec5d)
* [Build a Scalable Trading Bot With Rust Over the Weekend](https://medium.com/swlh/build-a-scalable-trading-bot-with-rust-over-the-weekend-9fd781940360)
* [Oh No! My Data Science Is Getting Rust-y](https://www.crowdstrike.com/blog/data-science-test-drive-of-rust-programming-language/)
* [The Usability of Ownership](https://arxiv.org/abs/2011.06171)

Number: 366  Date: 2020-11-25 

### Official
* [Inside] [What the Error Handling Project Group is Working On](https://blog.rust-lang.org/inside-rust/2020/11/23/What-the-error-handling-project-group-is-working-on.html)
### Newsletters
### Tooling
* [Rust Analyzer Changelog #52](https://rust-analyzer.github.io/thisweek/2020/11/23/changelog-52.html)
* [Knurling-rs Changelog #7](https://ferrous-systems.com/blog/knurling-changelog-7/)
### Observations/Thoughts
* [FlatBuffer as serialization agnostic IDL](https://adsharma.github.io/flattools-11222020.html)
* [WTF is Rust? The Illustrated Notes](https://dev.to/egghead/wtf-is-rust-the-illustrated-notes-564p)
* [First Lines of Rust](https://dev.to/arschles/first-lines-of-rust-ofe)
* [Optimizing Benchpress](https://blog.nodebb.org/optimizing-benchpress/)
* [pwintln uwu and other fun with elves and dynamic linkers](https://lfcode.ca/blog/pwintln-uwu)
### Rust Walkthroughs
* [Hands-on Rust: Effective Learning through 2D Game Development and Play](https://pragprog.com/titles/hwrust/hands-on-rust/)
* [CBOR IoT Data Serialization for Embedded C and Rust](https://www.jaredwolff.com/cbor-for-embedded-c-and-rust/)
* [Basic Interactions with Yew](https://dev.to/fllstck/basic-interactions-with-yew-3pa3)
* [Testing your crate C-API](https://dev.to/luzero/testing-your-crate-c-api-19nc)
* [Rocket Tutorial 03 part II: Proper Testing](https://dev.to/davidedelpapa/rocket-tutorial-03-part-ii-proper-testing-6h)
* [Select Syscall in Rust](https://dev.to/pjam/select-syscall-in-rust-mm)
* [FBSim: football-playing AI agents in Rust](https://iantayler.com/2020/11/22/fbsim-football-playing-ai-agents-in-rust/)
* [Building a Recipe Manager - Part 5 - Data Integrity](https://bheisler.github.io/post/recipe-manager-part-5-data-integrity/)
* [Bootstrapping support for the STM32WLE with the Embedded Rust ecosystem](https://jitter.company/blog/2020/11/23/bootstrapping-support-for-the-stm32wle-with-the-embedded-rust-ecosystem/)
* [Recipe for Calling Swift Closures from Asynchronous Rust Code](https://www.nickwilcox.com/blog/recipe_swift_rust_callback/)
* [video] [A Cool Generic Concurrency Primitive in Rust](https://youtu.be/eLNAMEoKAAc)
* [video] [Creative coding in Rust: re-creating a retro screensaver](https://youtu.be/d9lsT4kJo44)
* [video] [(Live Coding) Audio adventures in Rust: Packaging Actix + React app as macOS bundle](https://youtu.be/2u362vR167c)
* [video] [Prototype (Rust tutorial) - Design Patterns](https://www.youtube.com/watch?v=lL0PmeYWqiU&feature=youtu.be)
### Project Updates
* [cargo-mobile: Rust on mobile made easy!](https://dev.brainiumstudios.com/2020/11/24/cargo-mobile.html)
* [Welcoming the RustFest Project](https://blog.rustfest.eu/rustfest-project-announcement)
* [Levenshtein Heuristic in Poi](https://advancedresearch.github.io/blog/2020-11-21-levenshtein-heuristic-in-poi)
### Miscellaneous
* [Strengthening memory safety in Rust: exploring CHERI capabilities for a safe language](https://nw0.github.io/cheri-rust.pdf)
* [Why AWS loves Rust, and how we'd like to help](https://aws.amazon.com/blogs/opensource/why-aws-loves-rust-and-how-wed-like-to-help/#)
* [Why Work in Blockchain? - Journey from C++ to Rust Developer](https://medium.com/centrality/why-work-in-blockchain-journey-from-c-to-rust-developer-eddbc9ccdc3d)
* [Flash Animations Live Forever at the Internet Archive [via ruffle.rs, a Flash emulator written in Rust compiled to WASM]](https://www.reddit.com/r/rust/comments/jxfhnp/flash_animations_live_forever_at_the_internet/)
* [video] [How to create an awesome Rust GitHub project](https://www.youtube.com/watch?v=meAz2RQMHvM)

Number: 367  Date: 2020-12-2 

No project updates this week.
### Official
* [Announcing Rustup 1.23.0](https://blog.rust-lang.org/2020/11/27/Rustup-1.23.0.html)
### Newsletters
* [This Month in Rust Dimforge #3](https://www.dimforge.com/blog/2020/12/01/this-month-in-dimforge/)
### Tooling
* [IntelliJ Rust Changelog #136](https://intellij-rust.github.io/2020/11/30/changelog-136.html)
* [Rust Analyzer Changelog #53](https://rust-analyzer.github.io/thisweek/2020/11/30/changelog-53.html)
* [Knurling-rs Changelog #8](https://ferrous-systems.com/blog/knurling-changelog-8/)
### Observations/Thoughts
* [Rust Continuous Delivery](https://kflansburg.com/posts/rust-continuous-delivery/)
* [Why doesn't Rust's BTreeMap have a with_capacity() method?](https://www.nicolas-hahn.com/2020/11/30/btreemap-with-capacity/)
* [Why using WebAssembly and Rust together improves Node.js performance](https://developer.ibm.com/technologies/web-development/articles/why-webassembly-and-rust-together-improve-nodejs-performance/)
* [lib-ruby-parser](https://ilyabylich.svbtle.com/lib-ruby-parser)
* [Understanding Partial Moves in Rust](https://whileydave.com/2020/11/30/understanding-partial-moves-in-rust/)
* [Error Handling is Hard](https://www.fpcomplete.com/blog/error-handling-is-hard/)
* [Scalable Benchmarking with Rust Streams](https://pkolaczk.github.io/benchmarking-cassandra-with-rust-streams/)
* [I rewrote 10k lines of JS into Rust over the last month. Here's a write up about it](https://www.reddit.com/r/rust/comments/k3jy5g/i_rewrote_10k_lines_of_js_into_rust_over_the_last/)
### Rust Walkthroughs
* [References in Rust](https://hashrust.com/blog/references-in-rust/)
* [OS in Rust: Building kernel for custom target: Part-4](https://blog.knoldus.com/os-in-rust-building-kernel-for-custom-target-part-4/)
* [Writing Rust the Elixir way](https://dev.to/bkolobara/writing-rust-the-elixir-way-2lm8)
* [Risp (in (Rust) (Lisp))](https://stopa.io/post/222)
* [Props and Nested Components with Yew](https://dev.to/fllstck/props-and-nested-components-with-yew-2l0d)
* [Using Selenium with Rust](https://dev.to/stevepryde/using-selenium-with-rust-aca)
* [Rocket Tutorial 04: Data Persistency and Rocket (with MongoDB)](https://dev.to/davidedelpapa/rocket-tutorial-04-data-persistency-and-rocket-with-mongodb-e5j)
* [The Little Book of Rust Macros](https://veykril.github.io/tlborm/)
* [series] [Futures Explained in 200 Lines of Rust](https://cfsamson.github.io/books-futures-explained/introduction.html)
* [video] [Demo: 🦀️ Building a runtime reflection system for Rust](https://www.osohq.com/post/demo-building-runtime-reflection-system-for-rust)
* [video] [Sapling livestream 5 - Deleting Code](https://youtu.be/oc8DWXsodzE)
### Miscellaneous
* [Why scientists are turning to Rust](https://www.nature.com/articles/d41586-020-03382-2)
* [Pijul - The Mathematically Sound Version Control System Written In Rust](https://initialcommit.com/blog/pijul-version-control-system)
* [Amazon: We're hiring software engineers who know programming language Rust](https://www.zdnet.com/article/amazon-were-hiring-software-engineers-who-know-programming-language-rust/)

